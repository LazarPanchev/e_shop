<?php

namespace AppBundle\Repository;
use AppBundle\Entity\PromotionsTyres;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping;

/**
 * PromotionsTyresRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PromotionsTyresRepository extends EntityRepository
{
    /**
     * @param EntityManagerInterface $em
     */
    public function __construct(EntityManagerInterface $em)
    {
        parent::__construct($em,
            new Mapping\ClassMetadata(PromotionsTyres::class));
    }

    public function save($promotionsTyre)
    {
        $this->_em->persist($promotionsTyre);
        $this->_em->flush();
    }

    public function findPromotionByTyreIdAndDate($id, $todayDate)
    {
        $qb = $this->_em->createQueryBuilder()
            ->select('promotions_tyres, promotion')
            ->from('AppBundle:PromotionsTyres', 'promotions_tyres')
            ->leftJoin('promotions_tyres.promotionId', 'promotion')
            ->where('promotions_tyres.tyreId = :id')
            ->setParameter('id',$id);
        $qb->andWhere($qb->expr()->between(':todayDate','promotion.validFrom','promotion.validTo'))
            ->setParameter('todayDate',$todayDate);

        return $qb->getQuery()->getResult();


    }

    public function findWithPromotionsByTyreId($tyreId)
    {
        $qb = $this->_em->createQueryBuilder()
            ->select('promotions_tyres, promotion')
            ->from('AppBundle:PromotionsTyres', 'promotions_tyres')
            ->leftJoin('promotions_tyres.promotionId', 'promotion')
            ->where('promotions_tyres.tyreId = :tyreId')
            ->setParameter('tyreId',$tyreId);
        return $qb->getQuery()->getResult();
    }
}
