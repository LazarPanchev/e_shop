<?php

namespace AppBundle\Repository;


use AppBundle\Entity\Tyre;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SearchRepository extends EntityRepository
{
    /**
     * UserRepository constructor.
     * @param EntityManagerInterface $em
     */
    public function __construct(EntityManagerInterface $em)
    {
        parent::__construct($em,
            new Mapping\ClassMetadata(Tyre::class));
    }

    /**
     * @param $searchedWord
     * @return array
     */
    public function findByBrand($searchedWord)
    {
        $query = $this->createQueryBuilder('t')
            ->select('tyre')
            ->from('AppBundle:Tyre', 'tyre')
            ->where('tyre.make LIKE :searchedWord')
            ->setParameter('searchedWord', "%$searchedWord%")
            ->orderBy('tyre.diameter', 'ASC')
            ->addOrderBy('tyre.width', 'ASC')
            ->getQuery();

        return $query->getResult();

    }

    /**
     * @param $brand
     * @return array
     */
    public function quickSearchByBrand($brand){
        $query = $this->createQueryBuilder('t')
            ->select('tyre')
            ->from('AppBundle:Tyre', 'tyre')
            ->where('tyre.make = :brand')
            ->setParameter('brand', $brand)
            ->orderBy('tyre.diameter', 'ASC')
            ->addOrderBy('tyre.width', 'ASC')
            ->getQuery();

        return $query->getResult();
    }

    /**
     * @param $width
     * @param $height
     * @param $diameter
     * @return array
     */
    public function quickSearchBySize($width, $height, $diameter)
    {
        $query = $this->createQueryBuilder('t')
            ->select('tyre')
            ->from('AppBundle:Tyre', 'tyre')
            ->where('tyre.width = :width')
            ->setParameter('width', $width)
            ->andWhere('tyre.height = :height')
            ->setParameter('height', $height)
            ->andWhere('tyre.diameter = :diameter')
            ->setParameter('diameter', $diameter)
            ->orderBy('tyre.diameter', 'ASC')
            ->addOrderBy('tyre.width', 'ASC')
            ->getQuery();

        return $query->getResult();
    }

    public function quickSearchByCategory($category)
    {
        $query = $this->createQueryBuilder('t')
            ->select('tyre')
            ->from('AppBundle:Tyre', 'tyre')
            ->where('tyre.category = :category')
            ->setParameter('category', $category)
            ->orderBy('tyre.diameter', 'ASC')
            ->addOrderBy('tyre.width', 'ASC')
            ->getQuery();

        return $query->getResult();
    }
}
